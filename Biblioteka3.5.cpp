/*
* Розробити бібліотеку функцій для роботи з матрицями дробових чисел(ініціалізація,
    виведення на екран, видалення та додавання елементів, рядків).
*/
#include "biblioteka_3.5.h"
#include <iostream>
#include<Windows.h>
using namespace std;

int main()
{
    SetConsoleCP(1251);
    SetConsoleOutputCP(1251);
    double** d;
    int a, b, i, j;
    double elem;
    do {
        cout << "Введіть розмірність масиву:" << endl;
        cout << "кількість рядків: ";
        cin >> a;
        cout << "кількість колонок: ";
        cin >> b;
        if (a < 0|| b < 0)
        {
            cout << "Помилка при ведені. Повторіть спробу\n";
            cout << endl;
        }
    } while (a < 0 || b < 0);

    d = new double* [a];                //Правило відведення пам'яті для масиву: відводимо пам'ять для рядків, а вже потім для колонків
    for (int i = 0; i < a; i++)
        d[i] = new double[b];
    Matrix(d, a, b);
    int choise;
    do
    {
        
        cout << "1: Додати елемент\n";
        cout << "2: Додати рядок\n";
        cout << "3: Видалити елемент\n";
        cout << "4: Видалити рядок\n";
        cout << "5: Надрукувати матрицю\n";
        cout << "0: Вихід з програми\n";
        cin >> choise;

        switch (choise)
        {
        case 1:
            cout << " Введіть х та у позицію елемента по черзі" << endl;
            cout << "x: ";
            cin >> i;
            cout << "y: ";
            cin >> j;
            if (i >= 0 && j >= 0)
            {
                cout << "Введіть ваш елемент" << endl;
                cin >> elem;
                if (i < a && j < b)
                {
                    add_elem(d, i, j, elem);
                    cout << endl;
                    print(d, a, b);
                    cout << endl;
                    break;
                }
                else
                {
                    cout << "Позиції х та у виходять за межі масиву\n";
                    cout << endl;
                    break;
                }
            }
            else
            {
                cout << "Таких позицій не існує. Повторіть спробу\n";
                cout << endl;
            }
            break;
        case 2:
            d=add_rows(d, a, b);
            a++;
            cout << endl;
            print(d, a, b);
            cout << endl;
            break;
        case 3:
            cout << " Введіть х та у позицію елемента по черзі" << endl;
            cin >> i;
            cin >> j;
            if (i < a && j < b)
            {
                delet_elem(d, i, j);
                cout << endl;
                print(d, a, b);
                cout << endl;
                break;
            }
            else
            {
                cout << "Позиції х та у виходять за межі масиву";
                break;
            }
        case 4:
           delet_rows(d,a, b, i);
            cout << endl;
            print(d, a, b);
            cout << endl;
            break;
        case 5:
            cout << endl;
            print( d,  a, b);
        case 0:
            break;
        default:
            cout << "Помилка, виберіть один з заданих варіантів\n";
            break;
        }

    } while (choise != 0);
        return 0;
}
// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
